Traceback (most recent call last):
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
alt.Chart(mpg).transform_density(
    density="cty", as_=["cty", "density"], groupby=["drv"]
).mark_area(fillOpacity=0.8).encode(
    x="cty:Q",
    y="density:Q",
    color="drv:N",
)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
[0;32m/var/folders/x6/ffnr59f116l96_y0q0bjfz7c0000gn/T/ipykernel_45343/525377285.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m alt.Chart(mpg).transform_density(
[0m[1;32m      2[0m     [0mdensity[0m[0;34m=[0m[0;34m"cty"[0m[0;34m,[0m [0mas_[0m[0;34m=[0m[0;34m[[0m[0;34m"cty"[0m[0;34m,[0m [0;34m"density"[0m[0;34m][0m[0;34m,[0m [0mgroupby[0m[0;34m=[0m[0;34m[[0m[0;34m"drv"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0;34m)[0m[0;34m.[0m[0mmark_area[0m[0;34m([0m[0mfillOpacity[0m[0;34m=[0m[0;36m0.8[0m[0;34m)[0m[0;34m.[0m[0mencode[0m[0;34m([0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m     [0mx[0m[0;34m=[0m[0;34m"cty:Q"[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m     [0my[0m[0;34m=[0m[0;34m"density:Q"[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/altair/vegalite/v4/api.py[0m in [0;36mtransform_density[0;34m(self, density, as_, bandwidth, counts, cumulative, extent, groupby, maxsteps, minsteps, steps)[0m
[1;32m    942[0m         """
[1;32m    943[0m         return self._add_transform(
[0;32m--> 944[0;31m             core.DensityTransform(
[0m[1;32m    945[0m                 [0mdensity[0m[0;34m=[0m[0mdensity[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    946[0m                 [0mbandwidth[0m[0;34m=[0m[0mbandwidth[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/altair/vegalite/v4/schema/core.py[0m in [0;36m__init__[0;34m(self, density, bandwidth, counts, cumulative, extent, groupby, maxsteps, minsteps, steps, **kwds)[0m
[1;32m  18098[0m                  [0mextent[0m[0;34m=[0m[0mUndefined[0m[0;34m,[0m [0mgroupby[0m[0;34m=[0m[0mUndefined[0m[0;34m,[0m [0mmaxsteps[0m[0;34m=[0m[0mUndefined[0m[0;34m,[0m [0mminsteps[0m[0;34m=[0m[0mUndefined[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m  18099[0m                  steps=Undefined, **kwds):
[0;32m> 18100[0;31m         super(DensityTransform, self).__init__(density=density, bandwidth=bandwidth, counts=counts,
[0m[1;32m  18101[0m                                                [0mcumulative[0m[0;34m=[0m[0mcumulative[0m[0;34m,[0m [0mextent[0m[0;34m=[0m[0mextent[0m[0;34m,[0m [0mgroupby[0m[0;34m=[0m[0mgroupby[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m  18102[0m                                                maxsteps=maxsteps, minsteps=minsteps, steps=steps, **kwds)

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/altair/vegalite/v4/schema/core.py[0m in [0;36m__init__[0;34m(self, *args, **kwds)[0m
[1;32m  17973[0m [0;34m[0m[0m
[1;32m  17974[0m     [0;32mdef[0m [0m__init__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwds[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m> 17975[0;31m         [0msuper[0m[0;34m([0m[0mTransform[0m[0;34m,[0m [0mself[0m[0;34m)[0m[0;34m.[0m[0m__init__[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwds[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m  17976[0m [0;34m[0m[0m
[1;32m  17977[0m [0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/altair/utils/schemapi.py[0m in [0;36m__init__[0;34m(self, *args, **kwds)[0m
[1;32m    174[0m [0;34m[0m[0m
[1;32m    175[0m         [0;32mif[0m [0mDEBUG_MODE[0m [0;32mand[0m [0mself[0m[0;34m.[0m[0m_class_is_valid_at_instantiation[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 176[0;31m             [0mself[0m[0;34m.[0m[0mto_dict[0m[0;34m([0m[0mvalidate[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    177[0m [0;34m[0m[0m
[1;32m    178[0m     [0;32mdef[0m [0mcopy[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mdeep[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m [0mignore[0m[0;34m=[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/altair/utils/schemapi.py[0m in [0;36mto_dict[0;34m(self, validate, ignore, context)[0m
[1;32m    335[0m         [0;32mif[0m [0mvalidate[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    336[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 337[0;31m                 [0mself[0m[0;34m.[0m[0mvalidate[0m[0;34m([0m[0mresult[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    338[0m             [0;32mexcept[0m [0mjsonschema[0m[0;34m.[0m[0mValidationError[0m [0;32mas[0m [0merr[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    339[0m                 [0;32mraise[0m [0mSchemaValidationError[0m[0;34m([0m[0mself[0m[0;34m,[0m [0merr[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/altair/utils/schemapi.py[0m in [0;36mvalidate[0;34m(cls, instance, schema)[0m
[1;32m    440[0m             [0mschema[0m [0;34m=[0m [0mcls[0m[0;34m.[0m[0m_schema[0m[0;34m[0m[0;34m[0m[0m
[1;32m    441[0m         [0mresolver[0m [0;34m=[0m [0mjsonschema[0m[0;34m.[0m[0mRefResolver[0m[0;34m.[0m[0mfrom_schema[0m[0;34m([0m[0mcls[0m[0;34m.[0m[0m_rootschema[0m [0;32mor[0m [0mcls[0m[0;34m.[0m[0m_schema[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 442[0;31m         [0;32mreturn[0m [0mjsonschema[0m[0;34m.[0m[0mvalidate[0m[0;34m([0m[0minstance[0m[0;34m,[0m [0mschema[0m[0;34m,[0m [0mresolver[0m[0;34m=[0m[0mresolver[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    443[0m [0;34m[0m[0m
[1;32m    444[0m     [0;34m@[0m[0mclassmethod[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/validators.py[0m in [0;36mvalidate[0;34m(instance, schema, cls, *args, **kwargs)[0m
[1;32m    963[0m     [0mcls[0m[0;34m.[0m[0mcheck_schema[0m[0;34m([0m[0mschema[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    964[0m     [0mvalidator[0m [0;34m=[0m [0mcls[0m[0;34m([0m[0mschema[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 965[0;31m     [0merror[0m [0;34m=[0m [0mexceptions[0m[0;34m.[0m[0mbest_match[0m[0;34m([0m[0mvalidator[0m[0;34m.[0m[0miter_errors[0m[0;34m([0m[0minstance[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    966[0m     [0;32mif[0m [0merror[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    967[0m         [0;32mraise[0m [0merror[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/exceptions.py[0m in [0;36mbest_match[0;34m(errors, key)[0m
[1;32m    352[0m     """
[1;32m    353[0m     [0merrors[0m [0;34m=[0m [0miter[0m[0;34m([0m[0merrors[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 354[0;31m     [0mbest[0m [0;34m=[0m [0mnext[0m[0;34m([0m[0merrors[0m[0;34m,[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    355[0m     [0;32mif[0m [0mbest[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    356[0m         [0;32mreturn[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/validators.py[0m in [0;36miter_errors[0;34m(self, instance, _schema)[0m
[1;32m    222[0m [0;34m[0m[0m
[1;32m    223[0m                     [0merrors[0m [0;34m=[0m [0mvalidator[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mv[0m[0;34m,[0m [0minstance[0m[0;34m,[0m [0m_schema[0m[0;34m)[0m [0;32mor[0m [0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 224[0;31m                     [0;32mfor[0m [0merror[0m [0;32min[0m [0merrors[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    225[0m                         [0;31m# set details if not already set by the called fn[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    226[0m                         error._set(

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/_validators.py[0m in [0;36mref[0;34m(validator, ref, instance, schema)[0m
[1;32m    293[0m [0;34m[0m[0m
[1;32m    294[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 295[0;31m             [0;32myield[0m [0;32mfrom[0m [0mvalidator[0m[0;34m.[0m[0mdescend[0m[0;34m([0m[0minstance[0m[0;34m,[0m [0mresolved[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    296[0m         [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    297[0m             [0mvalidator[0m[0;34m.[0m[0mresolver[0m[0;34m.[0m[0mpop_scope[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/validators.py[0m in [0;36mdescend[0;34m(self, instance, schema, path, schema_path)[0m
[1;32m    238[0m [0;34m[0m[0m
[1;32m    239[0m         [0;32mdef[0m [0mdescend[0m[0;34m([0m[0mself[0m[0;34m,[0m [0minstance[0m[0;34m,[0m [0mschema[0m[0;34m,[0m [0mpath[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mschema_path[0m[0;34m=[0m[0;32mNone[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 240[0;31m             [0;32mfor[0m [0merror[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mevolve[0m[0;34m([0m[0mschema[0m[0;34m=[0m[0mschema[0m[0;34m)[0m[0;34m.[0m[0miter_errors[0m[0;34m([0m[0minstance[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    241[0m                 [0;32mif[0m [0mpath[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    242[0m                     [0merror[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mappendleft[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/validators.py[0m in [0;36miter_errors[0;34m(self, instance, _schema)[0m
[1;32m    222[0m [0;34m[0m[0m
[1;32m    223[0m                     [0merrors[0m [0;34m=[0m [0mvalidator[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mv[0m[0;34m,[0m [0minstance[0m[0;34m,[0m [0m_schema[0m[0;34m)[0m [0;32mor[0m [0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 224[0;31m                     [0;32mfor[0m [0merror[0m [0;32min[0m [0merrors[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    225[0m                         [0;31m# set details if not already set by the called fn[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    226[0m                         error._set(

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/_validators.py[0m in [0;36mproperties[0;34m(validator, properties, instance, schema)[0m
[1;32m    327[0m     [0;32mfor[0m [0mproperty[0m[0;34m,[0m [0msubschema[0m [0;32min[0m [0mproperties[0m[0;34m.[0m[0mitems[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    328[0m         [0;32mif[0m [0mproperty[0m [0;32min[0m [0minstance[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 329[0;31m             yield from validator.descend(
[0m[1;32m    330[0m                 [0minstance[0m[0;34m[[0m[0mproperty[0m[0;34m][0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    331[0m                 [0msubschema[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/validators.py[0m in [0;36mdescend[0;34m(self, instance, schema, path, schema_path)[0m
[1;32m    238[0m [0;34m[0m[0m
[1;32m    239[0m         [0;32mdef[0m [0mdescend[0m[0;34m([0m[0mself[0m[0;34m,[0m [0minstance[0m[0;34m,[0m [0mschema[0m[0;34m,[0m [0mpath[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mschema_path[0m[0;34m=[0m[0;32mNone[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 240[0;31m             [0;32mfor[0m [0merror[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mevolve[0m[0;34m([0m[0mschema[0m[0;34m=[0m[0mschema[0m[0;34m)[0m[0;34m.[0m[0miter_errors[0m[0;34m([0m[0minstance[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    241[0m                 [0;32mif[0m [0mpath[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    242[0m                     [0merror[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mappendleft[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/validators.py[0m in [0;36miter_errors[0;34m(self, instance, _schema)[0m
[1;32m    222[0m [0;34m[0m[0m
[1;32m    223[0m                     [0merrors[0m [0;34m=[0m [0mvalidator[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mv[0m[0;34m,[0m [0minstance[0m[0;34m,[0m [0m_schema[0m[0;34m)[0m [0;32mor[0m [0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 224[0;31m                     [0;32mfor[0m [0merror[0m [0;32min[0m [0merrors[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    225[0m                         [0;31m# set details if not already set by the called fn[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    226[0m                         error._set(

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/_validators.py[0m in [0;36mitems[0;34m(validator, items, instance, schema)[0m
[1;32m     74[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     75[0m         [0;32mfor[0m [0mindex[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mprefix[0m[0;34m,[0m [0mtotal[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 76[0;31m             yield from validator.descend(
[0m[1;32m     77[0m                 [0minstance[0m[0;34m=[0m[0minstance[0m[0;34m[[0m[0mindex[0m[0;34m][0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m     78[0m                 [0mschema[0m[0;34m=[0m[0mitems[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/validators.py[0m in [0;36mdescend[0;34m(self, instance, schema, path, schema_path)[0m
[1;32m    238[0m [0;34m[0m[0m
[1;32m    239[0m         [0;32mdef[0m [0mdescend[0m[0;34m([0m[0mself[0m[0;34m,[0m [0minstance[0m[0;34m,[0m [0mschema[0m[0;34m,[0m [0mpath[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mschema_path[0m[0;34m=[0m[0;32mNone[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 240[0;31m             [0;32mfor[0m [0merror[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mevolve[0m[0;34m([0m[0mschema[0m[0;34m=[0m[0mschema[0m[0;34m)[0m[0;34m.[0m[0miter_errors[0m[0;34m([0m[0minstance[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    241[0m                 [0;32mif[0m [0mpath[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    242[0m                     [0merror[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mappendleft[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/validators.py[0m in [0;36miter_errors[0;34m(self, instance, _schema)[0m
[1;32m    212[0m                 [0;32mreturn[0m[0;34m[0m[0;34m[0m[0m
[1;32m    213[0m [0;34m[0m[0m
[0;32m--> 214[0;31m             [0mscope[0m [0;34m=[0m [0mid_of[0m[0;34m([0m[0m_schema[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    215[0m             [0;32mif[0m [0mscope[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    216[0m                 [0mself[0m[0;34m.[0m[0mresolver[0m[0;34m.[0m[0mpush_scope[0m[0;34m([0m[0mscope[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jsonschema/validators.py[0m in [0;36m_id_of[0;34m(schema)[0m
[1;32m     88[0m     [0;32mif[0m [0mschema[0m [0;32mis[0m [0;32mTrue[0m [0;32mor[0m [0mschema[0m [0;32mis[0m [0;32mFalse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     89[0m         [0;32mreturn[0m [0;34m""[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 90[0;31m     [0;32mreturn[0m [0mschema[0m[0;34m.[0m[0mget[0m[0;34m([0m[0;34m"$id"[0m[0;34m,[0m [0;34m""[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     91[0m [0;34m[0m[0m
[1;32m     92[0m [0;34m[0m[0m

[0;31mAttributeError[0m: 'list' object has no attribute 'get'
AttributeError: 'list' object has no attribute 'get'

