Traceback (most recent call last):
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# If you don't have it, install geopy using 'pip install geopy'
from geopy.geocoders import Nominatim

# Create a geolocator using Open Street Map (aka Nominatim)
# Use your own user agent identifier here
geolocator = Nominatim(user_agent="codeforecon")

# Pass an address to retrieve full location information:
location = geolocator.geocode("Bank of England")

location.address
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mtimeout[0m                                   Traceback (most recent call last)
[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    444[0m                     [0;31m# Otherwise it looks like a bug in the code.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 445[0;31m                     [0msix[0m[0;34m.[0m[0mraise_from[0m[0;34m([0m[0me[0m[0;34m,[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    446[0m         [0;32mexcept[0m [0;34m([0m[0mSocketTimeout[0m[0;34m,[0m [0mBaseSSLError[0m[0;34m,[0m [0mSocketError[0m[0;34m)[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/urllib3/packages/six.py[0m in [0;36mraise_from[0;34m(value, from_value)[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    439[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 440[0;31m                     [0mhttplib_response[0m [0;34m=[0m [0mconn[0m[0;34m.[0m[0mgetresponse[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    441[0m                 [0;32mexcept[0m [0mBaseException[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/http/client.py[0m in [0;36mgetresponse[0;34m(self)[0m
[1;32m   1347[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1348[0;31m                 [0mresponse[0m[0;34m.[0m[0mbegin[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1349[0m             [0;32mexcept[0m [0mConnectionError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/http/client.py[0m in [0;36mbegin[0;34m(self)[0m
[1;32m    315[0m         [0;32mwhile[0m [0;32mTrue[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 316[0;31m             [0mversion[0m[0;34m,[0m [0mstatus[0m[0;34m,[0m [0mreason[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_read_status[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    317[0m             [0;32mif[0m [0mstatus[0m [0;34m!=[0m [0mCONTINUE[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/http/client.py[0m in [0;36m_read_status[0;34m(self)[0m
[1;32m    276[0m     [0;32mdef[0m [0m_read_status[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 277[0;31m         [0mline[0m [0;34m=[0m [0mstr[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mfp[0m[0;34m.[0m[0mreadline[0m[0;34m([0m[0m_MAXLINE[0m [0;34m+[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m"iso-8859-1"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    278[0m         [0;32mif[0m [0mlen[0m[0;34m([0m[0mline[0m[0;34m)[0m [0;34m>[0m [0m_MAXLINE[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/socket.py[0m in [0;36mreadinto[0;34m(self, b)[0m
[1;32m    668[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 669[0;31m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_sock[0m[0;34m.[0m[0mrecv_into[0m[0;34m([0m[0mb[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    670[0m             [0;32mexcept[0m [0mtimeout[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/ssl.py[0m in [0;36mrecv_into[0;34m(self, buffer, nbytes, flags)[0m
[1;32m   1240[0m                   self.__class__)
[0;32m-> 1241[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mread[0m[0;34m([0m[0mnbytes[0m[0;34m,[0m [0mbuffer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1242[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/ssl.py[0m in [0;36mread[0;34m(self, len, buffer)[0m
[1;32m   1098[0m             [0;32mif[0m [0mbuffer[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1099[0;31m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_sslobj[0m[0;34m.[0m[0mread[0m[0;34m([0m[0mlen[0m[0;34m,[0m [0mbuffer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1100[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mtimeout[0m: The read operation timed out

During handling of the above exception, another exception occurred:

[0;31mReadTimeoutError[0m                          Traceback (most recent call last)
[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    698[0m             [0;31m# Make the request on the httplib connection object.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 699[0;31m             httplib_response = self._make_request(
[0m[1;32m    700[0m                 [0mconn[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    446[0m         [0;32mexcept[0m [0;34m([0m[0mSocketTimeout[0m[0;34m,[0m [0mBaseSSLError[0m[0;34m,[0m [0mSocketError[0m[0;34m)[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 447[0;31m             [0mself[0m[0;34m.[0m[0m_raise_timeout[0m[0;34m([0m[0merr[0m[0;34m=[0m[0me[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0mtimeout_value[0m[0;34m=[0m[0mread_timeout[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    448[0m             [0;32mraise[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/urllib3/connectionpool.py[0m in [0;36m_raise_timeout[0;34m(self, err, url, timeout_value)[0m
[1;32m    335[0m         [0;32mif[0m [0misinstance[0m[0;34m([0m[0merr[0m[0;34m,[0m [0mSocketTimeout[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 336[0;31m             raise ReadTimeoutError(
[0m[1;32m    337[0m                 [0mself[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m"Read timed out. (read timeout=%s)"[0m [0;34m%[0m [0mtimeout_value[0m[0;34m[0m[0;34m[0m[0m

[0;31mReadTimeoutError[0m: HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)

During handling of the above exception, another exception occurred:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    438[0m             [0;32mif[0m [0;32mnot[0m [0mchunked[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 439[0;31m                 resp = conn.urlopen(
[0m[1;32m    440[0m                     [0mmethod[0m[0;34m=[0m[0mrequest[0m[0;34m.[0m[0mmethod[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    782[0m             )
[0;32m--> 783[0;31m             return self.urlopen(
[0m[1;32m    784[0m                 [0mmethod[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    782[0m             )
[0;32m--> 783[0;31m             return self.urlopen(
[0m[1;32m    784[0m                 [0mmethod[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    754[0m [0;34m[0m[0m
[0;32m--> 755[0;31m             retries = retries.increment(
[0m[1;32m    756[0m                 [0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0merror[0m[0;34m=[0m[0me[0m[0;34m,[0m [0m_pool[0m[0;34m=[0m[0mself[0m[0;34m,[0m [0m_stacktrace[0m[0;34m=[0m[0msys[0m[0;34m.[0m[0mexc_info[0m[0;34m([0m[0;34m)[0m[0;34m[[0m[0;36m2[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/urllib3/util/retry.py[0m in [0;36mincrement[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    573[0m         [0;32mif[0m [0mnew_retry[0m[0;34m.[0m[0mis_exhausted[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 574[0;31m             [0;32mraise[0m [0mMaxRetryError[0m[0;34m([0m[0m_pool[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0merror[0m [0;32mor[0m [0mResponseError[0m[0;34m([0m[0mcause[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    575[0m [0;34m[0m[0m

[0;31mMaxRetryError[0m: HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=Bank+of+England&format=json&limit=1 (Caused by ReadTimeoutError("HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)"))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/geopy/adapters.py[0m in [0;36m_request[0;34m(self, url, timeout, headers)[0m
[1;32m    447[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 448[0;31m             [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msession[0m[0;34m.[0m[0mget[0m[0;34m([0m[0murl[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mheaders[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    449[0m         [0;32mexcept[0m [0mException[0m [0;32mas[0m [0merror[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/requests/sessions.py[0m in [0;36mget[0;34m(self, url, **kwargs)[0m
[1;32m    554[0m         [0mkwargs[0m[0;34m.[0m[0msetdefault[0m[0;34m([0m[0;34m'allow_redirects'[0m[0;34m,[0m [0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 555[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0;34m'GET'[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    556[0m [0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    541[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 542[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    543[0m [0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    654[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 655[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    656[0m [0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    515[0m [0;34m[0m[0m
[0;32m--> 516[0;31m             [0;32mraise[0m [0mConnectionError[0m[0;34m([0m[0me[0m[0;34m,[0m [0mrequest[0m[0;34m=[0m[0mrequest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    517[0m [0;34m[0m[0m

[0;31mConnectionError[0m: HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=Bank+of+England&format=json&limit=1 (Caused by ReadTimeoutError("HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)"))

During handling of the above exception, another exception occurred:

[0;31mGeocoderUnavailable[0m                       Traceback (most recent call last)
[0;32m/var/folders/x6/ffnr59f116l96_y0q0bjfz7c0000gn/T/ipykernel_35744/2975955314.py[0m in [0;36m<module>[0;34m[0m
[1;32m      7[0m [0;34m[0m[0m
[1;32m      8[0m [0;31m# Pass an address to retrieve full location information:[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 9[0;31m [0mlocation[0m [0;34m=[0m [0mgeolocator[0m[0;34m.[0m[0mgeocode[0m[0;34m([0m[0;34m"Bank of England"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     10[0m [0;34m[0m[0m
[1;32m     11[0m [0mlocation[0m[0;34m.[0m[0maddress[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/geopy/geocoders/nominatim.py[0m in [0;36mgeocode[0;34m(self, query, exactly_one, timeout, limit, addressdetails, language, geometry, extratags, country_codes, viewbox, bounded, featuretype, namedetails)[0m
[1;32m    295[0m         [0mlogger[0m[0;34m.[0m[0mdebug[0m[0;34m([0m[0;34m"%s.geocode: %s"[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0m__class__[0m[0;34m.[0m[0m__name__[0m[0;34m,[0m [0murl[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    296[0m         [0mcallback[0m [0;34m=[0m [0mpartial[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_parse_json[0m[0;34m,[0m [0mexactly_one[0m[0;34m=[0m[0mexactly_one[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 297[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_call_geocoder[0m[0;34m([0m[0murl[0m[0;34m,[0m [0mcallback[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    298[0m [0;34m[0m[0m
[1;32m    299[0m     def reverse(

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/geopy/geocoders/base.py[0m in [0;36m_call_geocoder[0;34m(self, url, callback, timeout, is_json, headers)[0m
[1;32m    366[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    367[0m             [0;32mif[0m [0mis_json[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 368[0;31m                 [0mresult[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0madapter[0m[0;34m.[0m[0mget_json[0m[0;34m([0m[0murl[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mreq_headers[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    369[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    370[0m                 [0mresult[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0madapter[0m[0;34m.[0m[0mget_text[0m[0;34m([0m[0murl[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mreq_headers[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/geopy/adapters.py[0m in [0;36mget_json[0;34m(self, url, timeout, headers)[0m
[1;32m    436[0m [0;34m[0m[0m
[1;32m    437[0m     [0;32mdef[0m [0mget_json[0m[0;34m([0m[0mself[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m*[0m[0;34m,[0m [0mtimeout[0m[0;34m,[0m [0mheaders[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 438[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_request[0m[0;34m([0m[0murl[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mheaders[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    439[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    440[0m             [0;32mreturn[0m [0mresp[0m[0;34m.[0m[0mjson[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/envs/codeforecon/lib/python3.8/site-packages/geopy/adapters.py[0m in [0;36m_request[0;34m(self, url, timeout, headers)[0m
[1;32m    458[0m                     [0;32mraise[0m [0mGeocoderServiceError[0m[0;34m([0m[0mmessage[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    459[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 460[0;31m                     [0;32mraise[0m [0mGeocoderUnavailable[0m[0;34m([0m[0mmessage[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    461[0m             [0;32melif[0m [0misinstance[0m[0;34m([0m[0merror[0m[0;34m,[0m [0mrequests[0m[0;34m.[0m[0mTimeout[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    462[0m                 [0;32mraise[0m [0mGeocoderTimedOut[0m[0;34m([0m[0;34m"Service timed out"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mGeocoderUnavailable[0m: HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=Bank+of+England&format=json&limit=1 (Caused by ReadTimeoutError("HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)"))
GeocoderUnavailable: HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=Bank+of+England&format=json&limit=1 (Caused by ReadTimeoutError("HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)"))

